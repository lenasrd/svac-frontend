{"version":3,"sources":["pages/ProjectPage.js","pages/LimitationsPage.js","Question.js","pages/AuthorsVisualizationPage.js","DrawerMenu.js","App.js","serviceWorker.js","index.js"],"names":["ProjectPage","Toolbar","Typography","paragraph","LimitationsPage","useStyles","makeStyles","theme","questionPreview","display","flexDirection","justifyContent","alignItems","cursor","Question","props","classes","React","useState","open","setOpen","className","onClick","prev","title","Collapse","in","children","questionList","marginTop","AuthorsVisualizationPage","dangerouslySetInnerHTML","__html","Divider","createMuiTheme","palette","primary","main","secondary","root","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","logo","margin","fontSize","nested","paddingLeft","DrawerMenu","ThemeProvider","CssBaseline","AppBar","position","component","Link","to","Drawer","variant","paper","List","ListItem","key","button","ListItemText","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ce23579.chunk.js","sourcesContent":["import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nexport default function ProjectPage() {\n    return(\n        <main>\n            <Toolbar/>\n            <h1>Project</h1>\n            <Typography paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n                ut labore et dolore magna aliqua.\n            </Typography>\n        </main>\n    )\n};","import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nexport default function LimitationsPage() {\n    return(\n        <main>\n            <Toolbar/>\n            <h1>Limitations</h1>\n            <Typography paragraph>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n                ut labore et dolore magna aliqua.\n            </Typography>\n        </main>\n    )\n};","import React from 'react';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nconst useStyles = makeStyles((theme) => ({\n    questionPreview: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n}));\n\nexport default function Question(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleChange = () => {\n        setOpen((prev) => !prev);\n    };\n\n    return(\n        <main>\n            <div className={ classes.questionPreview } onClick={handleChange} >\n                <h3>{ props.title }</h3>\n                { open ? <ExpandLessIcon/> : <ExpandMoreIcon/> }\n            </div>\n            <div>\n                <Collapse in={open}>\n                    { props.children }\n                </Collapse>\n            </div>\n        </main>\n    );\n}\n","import Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport Question from \"../Question\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    questionList: {\n        marginTop: '3em',\n    }\n}));\n\nexport default function AuthorsVisualizationPage() {\n    const classes = useStyles();\n\n    return(\n        <main>\n            <Toolbar/>\n            <h1>Authors</h1>\n            <Typography>In this section, we will display our findings related to the Authors in our dataset.</Typography>\n            <div className={classes.questionList}>\n                <Question title=\"Which authors have published most papers?\">\n                    <div dangerouslySetInnerHTML={\n                        {__html: '<iframe src=\"https://public.tableau.com/views/CTSchoolDistrictsbyIncomeandGradeLevels2009-13/Sheet1?:embed=y&:display_count=n&:origin=viz_share_link\" width=\"800\" height=\"600\"></iframe>'}\n                    }/>\n                </Question>\n                <Divider></Divider>\n                <Question title=\"Which authors have been publishing over the longest time period?\">\n                    <div dangerouslySetInnerHTML={\n                        {__html: '<iframe src=\"https://public.tableau.com/views/CTSchoolDistrictsbyIncomeandGradeLevels2009-13/Sheet1?:embed=y&:display_count=n&:origin=viz_share_link\" width=\"800\" height=\"600\"></iframe>'}\n                    }/>\n                </Question>\n                <Divider></Divider>\n                <Question title=\"Which authors publish together often?\">\n                    <div dangerouslySetInnerHTML={\n                        {__html: '<iframe src=\"https://public.tableau.com/views/CTSchoolDistrictsbyIncomeandGradeLevels2009-13/Sheet1?:embed=y&:display_count=n&:origin=viz_share_link\" width=\"800\" height=\"600\"></iframe>'}\n                    }/>\n                </Question>\n            </div>\n        </main>\n    )\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport ProjectPage from './pages/ProjectPage'\nimport LimitationsPage from './pages/LimitationsPage'\nimport AuthorsVisualizationPage from \"./pages/AuthorsVisualizationPage\";\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            // Purple and green play nicely together.\n            main: '#001B48',\n        },\n        secondary: {\n            // This is green.A700 as hex.\n            main: '#11cb5f',\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    logo: {\n        margin: '0.5em',\n        fontSize: '2em',\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\n\nexport default function DrawerMenu() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <h1 component={Link} to={\"/project\"}>Project SVAC</h1>\n                        <DataUsageIcon className={classes.logo}/>\n                    </Toolbar>\n                </AppBar>\n                <Router>\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}>\n                        <Toolbar />\n                        <div className={classes.drawerContainer}>\n                            <List>\n                                <ListItem key=\"About\">\n                                    <h2 primary=\"About\">About</h2>\n                                </ListItem>\n                                <ListItem button className={classes.nested} component={Link} to={\"/project\"}>\n                                    <ListItemText primary=\"Project\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested} component={Link} to={\"/limitations\"}>\n                                    <ListItemText primary=\"Limitations\" />\n                                </ListItem>\n\n                                <ListItem key=\"Visualizations\">\n                                    <h2>Visualizations</h2>\n                                </ListItem>\n                                <ListItem button className={classes.nested} component={Link} to={\"/authors-visualizations\"}>\n                                    <ListItemText primary=\"Authors\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Universities\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Keywords\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Downloads\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Keywords\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Abstract\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Specialization\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Paper meta\" />\n                                </ListItem>\n                                <ListItem button className={classes.nested}>\n                                    <ListItemText primary=\"Book meta\" />\n                                </ListItem>\n                            </List>\n                        </div>\n                    </Drawer>\n                    <main className={classes.content}>\n                        <Route exact path=\"/project\" component={ProjectPage} />\n                        <Route exact path=\"/limitations\" component={LimitationsPage} />\n                        <Route exact path=\"/authors-visualizations\" component={AuthorsVisualizationPage} />\n                    </main>\n                </Router>\n            </div>\n        </ThemeProvider>\n    );\n}","import React from 'react';\nimport DrawerMenu from \"./DrawerMenu\";\nimport './App.css';\n\nfunction App() {\n  return (\n      <DrawerMenu></DrawerMenu>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}