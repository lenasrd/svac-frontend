{"version":3,"sources":["images/question2.png","images/question8.png","logo_white.png","images/question32.png","images/question13.png","pages/ProjectPage.js","pages/LimitationsPage.js","Question.js","pages/VisualizationAuthorsPage.js","pages/VisualizationCountriesCitiesPage.js","pages/VisualizationKeywordsPage.js","pages/VisualizationPaperMetaDataPage.js","DrawerMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProjectPage","Typography","variant","className","layout","date","iconStyle","background","color","icon","useStyles","makeStyles","theme","listItem","marginBottom","section","LimitationsPage","classes","questionPreview","display","flexDirection","justifyContent","alignItems","marginTop","cursor","highlightAnimated","backgroundColor","border","padding","borderRadius","fontSize","marginLeft","highlightInteractive","titleBox","Question","props","React","useState","open","setOpen","iframe","concat","flourishId","secondIframe","secondFlourishId","altText","title","onClick","prev","animated","interactive","Collapse","in","children","dangerouslySetInnerHTML","__html","imageSrc","src","width","alt","questionList","VisualizationAuthorsPage","Divider","question32","VisualizationCountriesCitiesPage","question13","VisualizationKeywordsPage","question2","question8","VisualizationPaperMetaDataPage","createMuiTheme","palette","primary","main","secondary","typography","h4","h5","root","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","spacing","logo","height","nested","paddingLeft","drawerHeadline","fontWeight","DrawerMenu","ThemeProvider","CssBaseline","AppBar","position","Toolbar","to","logo_white","Drawer","paper","List","ListItem","key","ListItemText","button","component","Link","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.522b0825.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/question2.0525dfd3.png\";","module.exports = __webpack_public_path__ + \"static/media/question8.1f3dfea0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_white.beb4bf9d.png\";","module.exports = __webpack_public_path__ + \"static/media/question32.12a4d930.png\";","module.exports = __webpack_public_path__ + \"static/media/question13.5359130b.png\";","import Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport \"./pages.css\";\r\n\r\nexport default function ProjectPage() {\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h4\">Project</Typography>\r\n      <Typography>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua.\r\n      </Typography>\r\n\r\n      <VerticalTimeline\r\n        className=\"vertical-timeline-custom-line\"\r\n        layout=\"1-column\"\r\n      >\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          date=\"April 2020\"\r\n          iconStyle={{ background: \"#3DBCA1\", color: \"#fff\" }}\r\n          icon={<CodeIcon />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n            Collection of questions and implementation of the data collection\r\n            algorithm\r\n          </h3>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          date=\"April 2020\"\r\n          iconStyle={{ background: \"#35A9A0\", color: \"#fff\" }}\r\n          icon={<CodeIcon />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n            Collection of a small test dataset\r\n          </h3>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--work\"\r\n          date=\"April - July 2020\"\r\n          iconStyle={{ background: \"#288BA2\", color: \"#fff\" }}\r\n          icon={<CodeIcon />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n            Error detection and correction within data and collection algorithm\r\n          </h3>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n\r\n        <VerticalTimelineElement\r\n          className=\"vertical-timeline-element--education\"\r\n          date=\"July 2020\"\r\n          iconStyle={{ background: \"#2171A1\", color: \"#fff\" }}\r\n          icon={<CodeIcon />}\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">\r\n            Final data collection\r\n          </h3>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n        <VerticalTimelineElement\r\n          iconStyle={{ background: \"#185C9D\", color: \"#fff\" }}\r\n          icon={<CodeIcon />}\r\n          date=\"July 2020\"\r\n        >\r\n          <h3 className=\"vertical-timeline-element-title\">Publication</h3>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </p>\r\n        </VerticalTimelineElement>\r\n      </VerticalTimeline>\r\n    </main>\r\n  );\r\n}\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    marginBottom: \"2em\",\r\n  },\r\n  section: {\r\n    marginBottom: \"2em\",\r\n  },\r\n}));\r\n\r\nexport default function LimitationsPage() {\r\n  const classes = useStyles();\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h4\">Limitations</Typography>\r\n      <Typography className={classes.listItem}>\r\n        In this section we will point out the limitations our visualizations and\r\n        analyses are bound to.\r\n      </Typography>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionPreview: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"0.35em\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  highlightAnimated: {\r\n    backgroundColor: \"#2171a1\",\r\n    border: \"none\",\r\n    color: \"white\",\r\n    padding: \"0.5em\",\r\n    borderRadius: \"5em\",\r\n    fontSize: \"1em\",\r\n    marginLeft: \"0.5em\",\r\n  },\r\n  highlightInteractive: {\r\n    backgroundColor: \"#35a9a0bb\",\r\n    border: \"none\",\r\n    color: \"white\",\r\n    padding: \"0.5em\",\r\n    borderRadius: \"5em\",\r\n    fontSize: \"1em\",\r\n    marginLeft: \"0.5em\",\r\n  },\r\n  titleBox: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nexport default function Question(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleChange = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n  const iframe = \"<iframe src='https://flo.uri.sh/visualisation/\".concat(\r\n    props.flourishId,\r\n    \"/embed' frameborder='0' scrolling='no' style='width:100%;height:600px;'></iframe>\"\r\n  );\r\n  const secondIframe = \"<iframe src='https://flo.uri.sh/visualisation/\".concat(\r\n    props.secondFlourishId,\r\n    \"/embed' frameborder='0' scrolling='no' style='width:100%;height:600px;'></iframe>\"\r\n  );\r\n  const altText = \"Visualization of\".concat(props.title);\r\n\r\n  return (\r\n    <main>\r\n      <div className={classes.questionPreview} onClick={handleChange}>\r\n        <div className={classes.titleBox}>\r\n          <Typography variant=\"h5\">{props.title}</Typography>\r\n          {props.animated && (\r\n            <Typography variant=\"h5\" className={classes.highlightAnimated}>\r\n              animated\r\n            </Typography>\r\n          )}\r\n          {props.interactive && (\r\n            <Typography variant=\"h5\" className={classes.highlightInteractive}>\r\n              interactive\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n      </div>\r\n      <div>\r\n        <Collapse in={open}>\r\n          {props.children}\r\n          {props.flourishId && (\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: iframe,\r\n              }}\r\n            />\r\n          )}\r\n          {props.secondFlourishId && (\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: secondIframe,\r\n              }}\r\n            />\r\n          )}\r\n          {props.imageSrc && (\r\n            <img src={props.imageSrc} width=\"100%\" alt={altText} />\r\n          )}\r\n        </Collapse>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Question from \"../Question\";\r\nimport question32 from \"../images/question32.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionList: {\r\n    marginTop: \"3em\",\r\n  },\r\n}));\r\n\r\nexport default function VisualizationAuthorsPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h4\">Authors</Typography>\r\n      <Typography>\r\n        In this section, we will display our findings related to the Authors in\r\n        our dataset.\r\n      </Typography>\r\n      <div className={classes.questionList}>\r\n        <Question\r\n          title=\"#12\"\r\n          flourishId=\"3139343\"\r\n          secondFlourishId=\"3140067\"\r\n        ></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#19\" flourishId=\"2993152\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#20\" flourishId=\"3137839\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#21\" flourishId=\"3139367\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#23\" flourishId=\"3126620\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#29\" flourishId=\"3080892\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#30\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#31\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#32\" imageSrc={question32}></Question>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Question from \"../Question\";\r\nimport question13 from \"../images/question13.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionList: {\r\n    marginTop: \"3em\",\r\n  },\r\n}));\r\n\r\nexport default function VisualizationCountriesCitiesPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h4\">Countries &amp; cities</Typography>\r\n      <Typography>\r\n        In this section, we will display our findings related to countries and\r\n        cities in our dataset.\r\n      </Typography>\r\n      <div className={classes.questionList}>\r\n        <Question title=\"#1\" flourishId=\"3072954\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#5\" flourishId=\"3073035\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#11\" flourishId=\"2905295\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#13\" imageSrc={question13}></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#14\" flourishId=\"3118439\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#15\" flourishId=\"3107129\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#18\" flourishId=\"3125292\"></Question>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Question from \"../Question\";\r\nimport question2 from \"../images/question2.png\";\r\nimport question8 from \"../images/question8.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionList: {\r\n    marginTop: \"3em\",\r\n  },\r\n}));\r\n\r\nexport default function VisualizationKeywordsPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h4\">Keywords</Typography>\r\n      <Typography>\r\n        In this section, we will display our findings related to keywords in our\r\n        dataset.\r\n      </Typography>\r\n      <div className={classes.questionList}>\r\n        <Question title=\"#2\" imageSrc={question2}></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#4\" flourishId=\"3125292\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#6\">\r\n          <div\r\n            dangerouslySetInnerHTML={{\r\n              __html:\r\n                \"<iframe src='https://vacs.htw.bytex.digital/keywordmap/index.html' frameborder='0' scrolling='no' style='width: 100%; height: 600px'></iframe> \",\r\n            }}\r\n          />\r\n        </Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#8\" imageSrc={question8}></Question>\r\n        <Divider></Divider>\r\n        <Question\r\n          title=\"#25\"\r\n          flourishId=\"3124774\"\r\n          secondFlourishId=\"3125623\"\r\n        ></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#26\" flourishId=\"3119439\"></Question>\r\n        <Divider></Divider>\r\n        <Question title=\"#34\" flourishId=\"3126947\"></Question>\r\n        <Divider></Divider>\r\n        <Question\r\n          title=\"#52\"\r\n          flourishId=\"3125051\"\r\n          secondFlourishId=\"3124894\"\r\n        ></Question>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Question from \"../Question\";\r\nimport question2 from \"../images/question2.png\";\r\nimport question8 from \"../images/question8.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionList: {\r\n    marginTop: \"3em\",\r\n  },\r\n}));\r\n\r\nexport default function VisualizationPaperMetaDataPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main>\r\n      <Typography variant=\"h4\">Paper meta data</Typography>\r\n      <Typography>\r\n        In this section, we will display our findings related to paper meta data\r\n        in our dataset.\r\n      </Typography>\r\n      <div className={classes.questionList}></div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport logo_white from \"./logo_white.png\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport ProjectPage from \"./pages/ProjectPage\";\r\nimport LimitationsPage from \"./pages/LimitationsPage\";\r\nimport VisualizationAuthorsPage from \"./pages/VisualizationAuthorsPage\";\r\nimport VisualizationCountriesCitiesPage from \"./pages/VisualizationCountriesCitiesPage\";\r\nimport VisualizationKeywordsPage from \"./pages/VisualizationKeywordsPage\";\r\nimport VisualizationPaperMetaDataPage from \"./pages/VisualizationPaperMetaDataPage\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // Purple and green play nicely together.\r\n      main: \"#2a2a2a\",\r\n    },\r\n    secondary: {\r\n      // This is green.A700 as hex.\r\n      main: \"#11cb5f\",\r\n    },\r\n  },\r\n  typography: {\r\n    h4: {\r\n      marginBottom: \"0.35em\",\r\n    },\r\n    h5: {\r\n      marginBottom: \"0.35em\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n    marginTop: \"6em\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    marginTop: \"6em\",\r\n  },\r\n  logo: {\r\n    height: \"3em\",\r\n    marginTop: \"1.5em\",\r\n    marginBottom: \"1.5em\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  drawerHeadline: {\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function DrawerMenu() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Link to=\"/project\">\r\n                <img\r\n                  src={logo_white}\r\n                  alt=\"VACS Logo\"\r\n                  className={classes.logo}\r\n                />\r\n              </Link>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <div className={classes.drawerContainer}>\r\n              <List>\r\n                <ListItem key=\"About\">\r\n                  <ListItemText>\r\n                    <Typography className={classes.drawerHeadline}>\r\n                      About\r\n                    </Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className={classes.nested}\r\n                  component={Link}\r\n                  to={\"/project\"}\r\n                >\r\n                  <ListItemText primary=\"Project\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className={classes.nested}\r\n                  component={Link}\r\n                  to={\"/limitations\"}\r\n                >\r\n                  <ListItemText primary=\"Limitations\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className={classes.nested}\r\n                  component={Link}\r\n                  to={\"/imprint\"}\r\n                >\r\n                  <ListItemText primary=\"Imprint\" />\r\n                </ListItem>\r\n\r\n                <ListItem key=\"About\">\r\n                  <ListItemText>\r\n                    <Typography className={classes.drawerHeadline}>\r\n                      Visualizations\r\n                    </Typography>\r\n                  </ListItemText>\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className={classes.nested}\r\n                  component={Link}\r\n                  to={\"/visualizations-authors\"}\r\n                >\r\n                  <ListItemText primary=\"Authors\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className={classes.nested}\r\n                  component={Link}\r\n                  to={\"/visualizations-countries-cities\"}\r\n                >\r\n                  <ListItemText primary=\"Countries &amp; cities\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className={classes.nested}\r\n                  component={Link}\r\n                  to={\"/visualizations-keywords\"}\r\n                >\r\n                  <ListItemText primary=\"Keywords\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  className={classes.nested}\r\n                  component={Link}\r\n                  to={\"/visualizations-paper-meta-data\"}\r\n                >\r\n                  <ListItemText primary=\"Paper meta data\" />\r\n                </ListItem>\r\n              </List>\r\n            </div>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Route exact path=\"/project\" component={ProjectPage} />\r\n            <Route exact path=\"/limitations\" component={LimitationsPage} />\r\n            <Route\r\n              exact\r\n              path=\"/visualizations-authors\"\r\n              component={VisualizationAuthorsPage}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/visualizations-countries-cities\"\r\n              component={VisualizationCountriesCitiesPage}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/visualizations-keywords\"\r\n              component={VisualizationKeywordsPage}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/visualizations-paper-meta-data\"\r\n              component={VisualizationPaperMetaDataPage}\r\n            />\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/project\" />\r\n            </Route>\r\n          </main>\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DrawerMenu from \"./DrawerMenu\";\r\n\r\nfunction App() {\r\n  return <DrawerMenu></DrawerMenu>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}